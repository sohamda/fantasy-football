name: Run Scorito Agent

on:
  workflow_dispatch:
    inputs:
      log_level:
        description: 'Log level'
        required: false
        default: 'INFO'
        type: choice
        options:
        - DEBUG
        - INFO
        - WARNING
        - ERROR
      dry_run:
        description: 'Run in dry run mode (no actual processing)'
        required: false
        default: false
        type: boolean

jobs:
  run-scorito-agent:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Azure Login
      uses: azure/login@v1
      with:
        client-id: ${{ secrets.AZURE_CLIENT_ID }}
        tenant-id: ${{ secrets.AZURE_TENANT_ID }}
        subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
        
    - name: Set up Python 3.12
      uses: actions/setup-python@v4
      with:
        python-version: '3.12'
        
    - name: Cache pip dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
          
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r code/backend/scoritoAgent/requirements.txt
        
    - name: Set environment variables
      run: |
        echo "LOG_LEVEL=${{ github.event.inputs.log_level }}" >> $GITHUB_ENV
        echo "DRY_RUN=${{ github.event.inputs.dry_run }}" >> $GITHUB_ENV
        
    - name: Run Scorito Agent
      env:
        # Azure authentication will be handled by the Azure Login step above
        # The following secrets should be configured in your repository settings
        AZURE_OPENAI_API_KEY: ${{ secrets.AZURE_OPENAI_API_KEY }}
        AZURE_OPENAI_ENDPOINT: ${{ secrets.AZURE_OPENAI_ENDPOINT }}
        COSMOS_DB_CONNECTION_STRING: ${{ secrets.COSMOS_DB_CONNECTION_STRING }}
        LOG_ANALYTICS_WORKSPACE_ID: ${{ secrets.LOG_ANALYTICS_WORKSPACE_ID }}
        LOG_ANALYTICS_SHARED_KEY: ${{ secrets.LOG_ANALYTICS_SHARED_KEY }}
        BING_SEARCH_API_KEY: ${{ secrets.BING_SEARCH_API_KEY }}
        # Azure CLI will be authenticated via the Azure Login step
        AZURE_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
        AZURE_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
        AZURE_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
        LOG_LEVEL: ${{ env.LOG_LEVEL }}
        DRY_RUN: ${{ env.DRY_RUN }}
      working-directory: code/backend/scoritoAgent
      run: |
        echo "Starting Scorito Agent with log level: $LOG_LEVEL"
        echo "Dry run mode: $DRY_RUN"
        echo "Azure Subscription: $AZURE_SUBSCRIPTION_ID"
        python main.py
        
    - name: Upload logs (if any)
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: scorito-agent-logs
        path: |
          code/backend/scoritoAgent/logs/
          code/backend/scoritoAgent/*.log
        retention-days: 7
        if-no-files-found: ignore
